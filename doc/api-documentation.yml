openapi: 3.0.0
info:
  title: User and Product, and Bid API
  version: 1.0.0
  description: API for user authentication and product management, and bidding on artifiacts

servers:
  - url: http://localhost:5000/api
    description: Local development server
  - url: https://artculthub-1287c0654e00.herokuapp.com/api
    description: Production server

paths:
  /signup:
    post:
      summary: User Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input

  /signin:
    post:
      summary: User Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Authentication failed

  /profile:
    get:
      summary: Get User Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved successfully
    put:
      summary: Update User Profile
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                isAmin:
                  type: boolean
      responses:
        '200':
          description: Profile updated successfully

  /products:
    post:
    /create:
      summary: Create Product
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: string
                  enum: ['Art', 'Illustration', 'Music', 'Culture', 'Dresses Indians', 'Silk Threads', 'Dishes Chamaily']
                imageUrl:
                  type: string
                  format: binary
              required:
                - name
                - price
      responses:
        '201':
          description: Product created successfully

    get:
      query:
        sort:
          name: sort
          in: query
          description: Sort products by price
          required: false
          schema:
            type: string
      summary: Get Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description:  Products retrieved successfully

  /bids:
    post:
      /place:
      summary: Place Bid
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
                - amount
      responses:
        '201':
          description: Bid placed successfully

    get:
      summary: Get Bids
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Bids retrieved successfully

  /upload/profile:
    post:
      summary: Upload Profile Picture to cloudinary
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: Profile picture uploaded successfully

  /upload/products:
    post:
      summary: Upload Product Image to cloudinary
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: Product image uploaded successfully

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT